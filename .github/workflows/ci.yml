name: CI

on:
  push:
    branches:
      - main
      - groth16
      - plonk
      - marlin
      - stark
      - halo
      - bulletproofs
      - nova
      - spartan
      - zkvm
      - twist-and-shout
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, nightly]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
      
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.rust }}-
            ${{ runner.os }}-cargo-
      
      - name: Check formatting
        run: cargo fmt --all -- --check
        if: matrix.rust == 'stable'
      
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
        if: matrix.rust == 'stable'
        continue-on-error: true
      
      - name: Build all crates
        run: cargo build --verbose --all
      
      - name: Run field operations tests
        run: cargo test --package zkp-field --verbose
      
      - name: Run commitment tests
        run: cargo test --package zkp-commitments --verbose
        continue-on-error: true  # Known failing tests
      
      - name: Run Marlin tests
        run: cargo test --package zkp-marlin --verbose
        continue-on-error: true  # May have compilation issues
      
      - name: Run Sonic tests
        run: cargo test --package zkp-sonic --verbose
        continue-on-error: true  # May have compilation issues

  benchmarks:
    name: Benchmarks
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'main')
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-bench-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Run field operation benchmarks
        run: cargo bench --package zkp-field
        continue-on-error: true
      
      - name: Run commitment benchmarks
        run: cargo bench --package zkp-commitments
        continue-on-error: true
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build (release)
        run: cargo build --workspace --release -q
      - name: Run unit & property tests (fast)
        run: cargo test --workspace --tests -- --nocapture
      - name: Smoke bench (single crate quick)
        run: |
          # run a very small smoke bench to detect regressions (non-exhaustive)
          cargo bench --manifest-path crates/integration/Cargo.toml -- --bench smoke || true
      - name: Lint & fmt check
        run: |
          cargo fmt -- --check
          cargo clippy --workspace -- -D warnings
